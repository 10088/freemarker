/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
#mixed_content  // o.a.f.c.ast.MixedContent
    #text  // o.a.f.c.ast.TextBlock
        - content: "1 "  // String
    @  // o.a.f.c.ast.UnifiedCall
        - callee: foo  // o.a.f.c.ast.Identifier
        - argument name: "x"  // String
        - argument value: 1  // o.a.f.c.ast.NumberLiteral
        - argument name: "y"  // String
        - argument value: 2  // o.a.f.c.ast.NumberLiteral
        - target loop variable: "b1"  // String
        - target loop variable: "b2"  // String
        #text  // o.a.f.c.ast.TextBlock
            - content: "x"  // String
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n2 "  // String
    @  // o.a.f.c.ast.UnifiedCall
        - callee: .  // o.a.f.c.ast.Dot
            - left-hand operand: ns  // o.a.f.c.ast.Identifier
            - right-hand operand: "bar"  // String
        - argument value: 1  // o.a.f.c.ast.NumberLiteral
        - argument value: 2  // o.a.f.c.ast.NumberLiteral
        - target loop variable: "b1"  // String
        - target loop variable: "b2"  // String
        #text  // o.a.f.c.ast.TextBlock
            - content: "y"  // String
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n3 "  // String
    #assign  // o.a.f.c.ast.Assignment
        - assignment target: "x"  // String
        - assignment operator: "="  // String
        - assignment source: 123  // o.a.f.c.ast.NumberLiteral
        - variable scope: "1"  // Integer
        - namespace: null  // Null
    #assign  // o.a.f.c.ast.Assignment
        - assignment target: "x"  // String
        - assignment operator: "="  // String
        - assignment source: 123  // o.a.f.c.ast.NumberLiteral
        - variable scope: "1"  // Integer
        - namespace: ns  // o.a.f.c.ast.Identifier
    #global  // o.a.f.c.ast.Assignment
        - assignment target: "x"  // String
        - assignment operator: "="  // String
        - assignment source: 123  // o.a.f.c.ast.NumberLiteral
        - variable scope: "3"  // Integer
        - namespace: null  // Null
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n4 "  // String
    #if-#elseif-#else-container  // o.a.f.c.ast.IfBlock
        #if  // o.a.f.c.ast.ConditionalBlock
            - condition: ==  // o.a.f.c.ast.ComparisonExpression
                - left-hand operand: +  // o.a.f.c.ast.AddConcatExpression
                    - left-hand operand: x  // o.a.f.c.ast.Identifier
                    - right-hand operand: 1  // o.a.f.c.ast.NumberLiteral
                - right-hand operand: 0  // o.a.f.c.ast.NumberLiteral
            - AST-node subtype: "0"  // Integer
            #text  // o.a.f.c.ast.TextBlock
                - content: "foo"  // String
            ${...}  // o.a.f.c.ast.DollarVariable
                - content: y  // o.a.f.c.ast.Identifier
            #text  // o.a.f.c.ast.TextBlock
                - content: "bar"  // String
        #else  // o.a.f.c.ast.ConditionalBlock
            - condition: null  // Null
            - AST-node subtype: "1"  // Integer
            ${...}  // o.a.f.c.ast.DollarVariable
                - content: "static"  // o.a.f.c.ast.StringLiteral
            ${...}  // o.a.f.c.ast.DollarVariable
                - content: dynamic "..."  // o.a.f.c.ast.StringLiteral
                    - value part: "x"  // String
                    - value part: ${...}  // o.a.f.c.ast.DollarVariable
                        - content: *  // o.a.f.c.ast.ArithmeticExpression
                            - left-hand operand: baaz  // o.a.f.c.ast.Identifier
                            - right-hand operand: 10  // o.a.f.c.ast.NumberLiteral
                            - AST-node subtype: "1"  // Integer
                    - value part: "y"  // String
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n5 "  // String
    #switch  // o.a.f.c.ast.SwitchBlock
        - value: x  // o.a.f.c.ast.Identifier
        #case  // o.a.f.c.ast.Case
            - condition: 1  // o.a.f.c.ast.NumberLiteral
            - AST-node subtype: "0"  // Integer
            #text  // o.a.f.c.ast.TextBlock
                - content: "one"  // String
        #case  // o.a.f.c.ast.Case
            - condition: 2  // o.a.f.c.ast.NumberLiteral
            - AST-node subtype: "0"  // Integer
            #text  // o.a.f.c.ast.TextBlock
                - content: "two"  // String
        #default  // o.a.f.c.ast.Case
            - condition: null  // Null
            - AST-node subtype: "1"  // Integer
            #text  // o.a.f.c.ast.TextBlock
                - content: "more"  // String
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n6 "  // String
    #macro  // o.a.f.c.ast.Macro
        - assignment target: "foo"  // String
        - parameter name: "x"  // String
        - parameter default: null  // Null
        - parameter name: "y"  // String
        - parameter default: 2  // o.a.f.c.ast.NumberLiteral
        - parameter name: "z"  // String
        - parameter default: +  // o.a.f.c.ast.AddConcatExpression
            - left-hand operand: y  // o.a.f.c.ast.Identifier
            - right-hand operand: 1  // o.a.f.c.ast.NumberLiteral
        - catch-all parameter name: "q"  // String
        - AST-node subtype: "0"  // Integer
        #nested  // o.a.f.c.ast.BodyInstruction
            - passed value: x  // o.a.f.c.ast.Identifier
            - passed value: y  // o.a.f.c.ast.Identifier
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n7 "  // String
    #function  // o.a.f.c.ast.Macro
        - assignment target: "foo"  // String
        - parameter name: "x"  // String
        - parameter default: null  // Null
        - parameter name: "y"  // String
        - parameter default: null  // Null
        - catch-all parameter name: null  // Null
        - AST-node subtype: "1"  // Integer
        #local  // o.a.f.c.ast.Assignment
            - assignment target: "x"  // String
            - assignment operator: "="  // String
            - assignment source: 123  // o.a.f.c.ast.NumberLiteral
            - variable scope: "2"  // Integer
            - namespace: null  // Null
        #return  // o.a.f.c.ast.ReturnInstruction
            - value: 1  // o.a.f.c.ast.NumberLiteral
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n8 "  // String
    #list  // o.a.f.c.ast.IteratorBlock
        - list source: xs  // o.a.f.c.ast.Identifier
        - target loop variable: "x"  // String
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n9 "  // String
    #list-#else-container  // o.a.f.c.ast.ListElseContainer
        #list  // o.a.f.c.ast.IteratorBlock
            - list source: xs  // o.a.f.c.ast.Identifier
            #text  // o.a.f.c.ast.TextBlock
                - content: "["  // String
            #items  // o.a.f.c.ast.Items
                - target loop variable: "x"  // String
                ${...}  // o.a.f.c.ast.DollarVariable
                    - content: x  // o.a.f.c.ast.Identifier
                #sep  // o.a.f.c.ast.Sep
                    #text  // o.a.f.c.ast.TextBlock
                        - content: ", "  // String
            #text  // o.a.f.c.ast.TextBlock
                - content: "]"  // String
        #else  // o.a.f.c.ast.ElseOfList
            #text  // o.a.f.c.ast.TextBlock
                - content: "None"  // String
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n10 "  // String
    #--...--  // o.a.f.c.ast.Comment
        - content: " A comment "  // String
    #text  // o.a.f.c.ast.TextBlock
        - content: "\n11 "  // String
    #outputformat  // o.a.f.c.ast.OutputFormatBlock
        - value: "XML"  // o.a.f.c.ast.StringLiteral
        #noautoesc  // o.a.f.c.ast.NoAutoEscBlock
            ${...}  // o.a.f.c.ast.DollarVariable
                - content: a  // o.a.f.c.ast.Identifier
            #autoesc  // o.a.f.c.ast.AutoEscBlock
                ${...}  // o.a.f.c.ast.DollarVariable
                    - content: b  // o.a.f.c.ast.Identifier
            ${...}  // o.a.f.c.ast.DollarVariable
                - content: c  // o.a.f.c.ast.Identifier
