oneArg<Object>(null) == oneArg<Object>(null)
oneArg<String>("s") == oneArg<String>("s")
ambiguous == ambiguous (should be oneArg<boolean>)
oneArg<List>([1, 2]) == oneArg<List>([1, 2])
oneArg<Map>({"a": 1, "b": 2}) == oneArg<Map>({"a": 1, "b": 2})

oneArg2<Map>({"a": 1, "b": 2}) == oneArg2<Map>({"a": 1, "b": 2})
oneArg2<List>([1, 2]) == oneArg2<List>([1, 2])
no such method == no such method (should be ambiguous)

no such method == no such method (should be oneArg3<List>(null))

notOverloaded<List>([1, 2]) == notOverloaded<List>([1, 2])
notOverloaded<List>(null) == notOverloaded<List>(null)

varargsIssue1<Map, List>({"a": 1, "b": 2}, []) == varargsIssue1<Map, List>({"a": 1, "b": 2}, []) 
varargsIssue1<Object...>({"a": 1, "b": 2}, null) == varargsIssue1<Object...>({"a": 1, "b": 2}, null) (should be varargsIssue1<Map, List>)

varargsIssue2<String, Map>("s", {"a": 1, "b": 2}) == varargsIssue2<String, Map>("s", {"a": 1, "b": 2})
varargsIssue2<String, List>("s", [1, 2]) == varargsIssue2<String, List>("s", [1, 2])
varargsIssue2<Object...>("s", null) == varargsIssue2<Object...>("s", null) (should be an error?)

numberIssue1<int>(1) == numberIssue1<int>(1)
numberIssue1<int>(0) == numberIssue1<int>(0) (should be numberIssue1<float>(0.5))
numberIssue1<float>(0.5) == numberIssue1<float>(0.5)
no such method == no such method
not possible == not possible

ambiguous == ambiguous
ambiguous == ambiguous (should be numberIssue2<BigDecimal>(0.5))
no such method == no such method (should be numberIssue2<BigDecimal>(null))

numberIssue3<int>(0) == numberIssue3<int>(0) (should be numberIssue1<double>(0.5))
numberIssue3<double>(0.5) == numberIssue3<double>(0.5)
numberIssue3<double>(0.5) == numberIssue3<double>(0.5)